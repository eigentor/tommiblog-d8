{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - title: The node title.
 * - content: An array of node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {% hide(content.field_example) %} to temporarily suppress the printing
 *   of a given element.
 * - author: Themed username of node author output from theme_username().
 * - user_picture: The node author's picture from user-picture.html.twig.
 * - created: Formatted creation date. Preprocess functions can reformat it by
 *   calling format_date() with the desired parameters on the $created variable.
 * - changed: Formatted last-changed date.
 * - node_url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: An instance of Attributes class that can be manipulated as an
 *    array and printed as a string.
 *    It includes the 'class' information, which includes:
 *   - node: The current template type; for example, "theming hook".
 *   - node-[type]: The current node type. For example, if the node is a
 *     "Article" it would result in "node-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - view-mode-[view_mode]: The View Mode of the node; for example, "teaser"
 *     or "full".
 *   - preview: Nodes in preview mode.
 *   The following are controlled through the node publishing options.
 *   - promoted: Nodes promoted to the front page.
 *   - sticky: Nodes ordered above other non-sticky nodes in teaser
 *     listings.
 *   - unpublished: Unpublished nodes visible only to administrators.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 *
 * Other variables:
 * - node: Full node entity. Contains data that may not be safe.
 * - type: Node type; for example, page, article, etc.
 * - comment_count: Number of comments attached to the node.
 * - uid: User ID of the node author.
 * - created: Time the node was published formatted in Unix timestamp.
 * - zebra: Outputs either "even" or "odd". Useful for zebra striping in
 *   teaser listings.
 * - id: Position of the node. Increments each time it's output.
 *
 * Node status variables:
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state (shortcut for $view_mode == 'teaser').
 * - page: Flag for the full page state.
 * - promote: Flag for front page promotion state.
 * - sticky: Flags for sticky post setting.
 * - status: Flag for published status.
 * - comment: State of comment settings for the node.
 * - readmore: Flags true if the teaser content of the node cannot hold the
 *   main body content.
 * - is_front: Flags true when presented in the front page.
 * - logged_in: Flags true when the current user is a logged-in member.
 * - is_admin: Flags true when the current user is an administrator.
 *
 * Field variables: for each field instance attached to the node a corresponding
 * variable is defined; for example, $node->body becomes body. When needing to
 * access a field's raw values, developers/themers are strongly encouraged to
 * use these variables. Otherwise they will have to explicitly specify the
 * desired field language; for example, $node->body['en'], thus overriding any
 * language negotiation rule that was previously applied.
 *
 * @see template_preprocess()
 * @see template_preprocess_node()
 *
 * @TODO: might be a good idea to remove the id attribute, because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
<article id="node-{{ node.nid }}" class="clearfix {{ attributes.class }}"{{ attributes }}>

  {% if not page %}
    <header>
      <h3><a href="{{ node_url }}" rel="bookmark">{{ node.title }}</a></h3>
    </header>
  {% endif %}
  {{ title_suffix }}
{#
  {% if display_submitted %}
    <footer>
      {{ user_picture }}
      {% set args = {'!author': author, '!date': created} %}
      <p class="submitted">{{ 'by !author on !date' | t(args) }}</p>
    </footer>
  {% endif %}
#}

  <div class="content {{ content_attributes.class }}"{{ content_attributes }}>
    {# We hide the comments and links now so that we can render them later. #}
    {{ hide(content.comments) }}
    {{ hide(content.links) }}
    {{ content }}
  </div>
  <footer>
  {{ content.links }}
  {{ content.comments }}
  </footer>

</article>
